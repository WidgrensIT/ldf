%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-

{erl_opts, [debug_info]}.
{src_dirs, ["src", "src/controllers"]}.
{shell, [{config, "./config/sys.docker.config"}]}.

{erlydtl_opts, [
    {doc_root, "src/views"},
    {recursive, true},
    {libraries, [
        {nova_erlydtl_inventory, nova_erlydtl_inventory}
    ]},
    {default_libraries, [nova_erlydtl_inventory]}
]}.

{deps, [
    pgo,
    nova
]}.

%% Release profiles
%% To create a release just run
%% rebar3 release -n ldf-prod
{relx, [
    {release, {ldf, "0.1.0"}, [ldf], [
        {dev_mode, false},
        {include_erts, true},
        {extended_start_script, true}
    ]}
]}.

%% Plugins for rebar3
{plugins, [
    rebar3_auto,
    {rebar3_erlydtl_plugin, ".*",
        {git, "https://github.com/tsloughter/rebar3_erlydtl_plugin.git", {branch, "master"}}},
    erlfmt
]}.

{provider_hooks, [
    {pre, [{compile, {erlydtl, compile}}]}
]}.
{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    locals_not_used,
    deprecated_function_calls,
    deprecated_functions
]}.

{profiles, [
    {lint, [
        {plugins, [rebar3_lint]}
    ]}
]}.

{alias, [{run, [{fmt, "--write"}, shell]}]}.

{erlfmt, [
    write,
    {files, [
        "{rebar.config, elvis.config, src, include,test}/*.{hrl,erl}",
        "src/controllers/*.erl",
        "src/plugins/*.erl",
        "config/*"
    ]}
]}.

{dialyzer, [
    {warnings, [
        unknown
    ]},
    {plt_apps, all_deps},
    {plt_extra_apps, [
        jhn_stdlib,
        edoc,
        xmerl,
        uuid,
        cowboy,
        erlydtl,
        cowlib,
        routing_tree
    ]}
]}.
